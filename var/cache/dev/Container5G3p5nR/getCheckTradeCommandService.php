<?php

namespace Container5G3p5nR;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getCheckTradeCommandService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'App\Command\Cron\CheckTradeCommand' shared autowired service.
     *
     * @return \App\Command\Cron\CheckTradeCommand
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'console'.\DIRECTORY_SEPARATOR.'Command'.\DIRECTORY_SEPARATOR.'Command.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Command'.\DIRECTORY_SEPARATOR.'Cron'.\DIRECTORY_SEPARATOR.'CheckTradeCommand.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'psr'.\DIRECTORY_SEPARATOR.'log'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'LoggerAwareInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'psr'.\DIRECTORY_SEPARATOR.'log'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'LoggerAwareTrait.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'lock'.\DIRECTORY_SEPARATOR.'LockFactory.php';

        $a = new \Symfony\Component\Lock\LockFactory(($container->privates['.lock.default.store.TTEh_gT'] ?? $container->load('get_Lock_Default_Store_TTEhGTService')));

        $b = new \Symfony\Bridge\Monolog\Logger('lock');
        $b->pushHandler(($container->privates['monolog.handler.console'] ?? self::getMonolog_Handler_ConsoleService($container)));
        $b->pushHandler(($container->privates['monolog.handler.main'] ?? self::getMonolog_Handler_MainService($container)));

        $a->setLogger($b);

        $container->privates['App\\Command\\Cron\\CheckTradeCommand'] = $instance = new \App\Command\Cron\CheckTradeCommand(($container->services['doctrine.orm.default_entity_manager'] ?? $container->load('getDoctrine_Orm_DefaultEntityManagerService')), ($container->privates['App\\Repository\\TradeRepository'] ?? $container->load('getTradeRepositoryService')), ($container->privates['App\\Service\\TradingService'] ?? $container->load('getTradingServiceService')), $a);

        $instance->setName('app:cron:trade:check');
        $instance->setAliases(['app:cron:trade:check']);
        $instance->setDescription('Test.');

        return $instance;
    }
}
